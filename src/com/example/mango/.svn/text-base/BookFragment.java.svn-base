package com.example.mango;

import it.gmariotti.cardslib.library.internal.Card;
import it.gmariotti.cardslib.library.internal.CardArrayAdapter;
import it.gmariotti.cardslib.library.view.CardListView;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import android.app.Fragment;
import android.os.Bundle;
import android.os.Parcelable;
import android.support.v4.view.PagerAdapter;
import android.support.v4.view.ViewPager;
import android.support.v4.view.ViewPager.OnPageChangeListener;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;

import com.example.mango.ListFragment.MyOnPageChangeListener;
import com.example.widget.RemarkCard;
import com.nhaarman.listviewanimations.appearance.AnimationAdapter;
import com.nhaarman.listviewanimations.appearance.simple.ScaleInAnimationAdapter;

public class BookFragment extends Fragment {

	private static final int TAB_COUNT = 2;
	private static final int TAB_ONE = 0;
	private static final int TAB_TWO = 1;
	private int currentItem = 1;
	private List<View> listViews;
	CardListView remark_list= null;
	
	TextView t1, t2 = null;
	ImageView img01,img02 = null;
	
	
	private ViewPager viewPager; // android-support-v4中的滑动组件
	//private BookAdapter bookAdapter;
	@Override
	public View onCreateView(LayoutInflater inflater, ViewGroup container,
			Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		final View Book = inflater.inflate(R.layout.book, container, false);
		View bookContent = inflater.inflate(R.layout.book_content, container,false);
		View bookRemark = inflater.inflate(R.layout.book_remark, container,false);
		//bookAdapter = new BookAdapter(getActivity().getFragmentManager());
		viewPager = (ViewPager)Book.findViewById(R.id.pager);
		listViews = new ArrayList<View>();
		
		SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
		
		 ArrayList<Card> cards = new ArrayList<Card>();
	        for (int i=0;i<10;i++){
	            RemarkCard card = new RemarkCard(this.getActivity());
	            card.setCustName("Application example "+i);
	            card.setContent("A company inc..."+i);
	            card.setDate(df.format(new Date()));
	            card.setRating((float)(Math.random()*(5.0)));
	            
	            card.count=i;

	            //Only for test, change some icon

	            card.init();
	            card.setBackgroundResourceId(R.drawable.card_alfa);
	            cards.add(card);
	        }
	        CardArrayAdapter mCardArrayAdapter = new CardArrayAdapter(getActivity(),cards);

	        remark_list = (CardListView) bookRemark.findViewById(R.id.remark_list);
	        if (remark_list!=null){
	        	AnimationAdapter animCardArrayAdapter = new ScaleInAnimationAdapter(mCardArrayAdapter);
	            animCardArrayAdapter.setAbsListView(remark_list);
	            remark_list.setExternalAdapter(animCardArrayAdapter,mCardArrayAdapter);
	        }
		listViews.add(bookContent);
		listViews.add(bookRemark);
		//viewPager.setOnPageChangeListener(listener);
		viewPager.setAdapter(new MyPagerAdapter(listViews));
		viewPager.setCurrentItem(0);
		viewPager.setOnPageChangeListener(new MyOnPageChangeListener());
		
		
		t1 = (TextView) Book.findViewById(R.id.tab01);
		t1.setOnClickListener(new MyOnClickListener(0));
		t2 = (TextView) Book.findViewById(R.id.tab02);
		t2.setOnClickListener(new MyOnClickListener(1));
		
		return Book;
	}
	
	public class MyPagerAdapter extends PagerAdapter {
		public List<View> mListViews;

		public MyPagerAdapter(List<View> mListViews) {
			this.mListViews = mListViews;
		}

		@Override
		public void destroyItem(View arg0, int arg1, Object arg2) {
			((ViewPager) arg0).removeView(mListViews.get(arg1));
		}

		@Override
		public void finishUpdate(View arg0) {
		}

		@Override
		public int getCount() {
			return mListViews.size();
		}

		@Override
		public Object instantiateItem(View arg0, int arg1) {
			((ViewPager) arg0).addView(mListViews.get(arg1), 0);
			return mListViews.get(arg1);
		}

		@Override
		public boolean isViewFromObject(View arg0, Object arg1) {
			return arg0 == (arg1);
		}

		@Override
		public void restoreState(Parcelable arg0, ClassLoader arg1) {
		}

		@Override
		public Parcelable saveState() {
			return null;
		}

		@Override
		public void startUpdate(View arg0) {
		}
	}
	
	public class MyOnClickListener implements View.OnClickListener {
		private int index = 0;

		public MyOnClickListener(int i) {
			index = i;
		}

		@Override
		public void onClick(View v) {
			viewPager.setCurrentItem(index);
		}
	};

	/**
	 * 页卡切换监听
	 */
	public class MyOnPageChangeListener implements OnPageChangeListener {



		@Override
		public void onPageSelected(int arg0) {
//			Animation animation = null;
			switch (arg0) {
			case 0:
				t1.setBackgroundResource(R.drawable.tab_left_focus);
				t2.setBackgroundResource(R.drawable.tab_right_nofocus);
				break;
			case 1:
				t2.setBackgroundResource(R.drawable.tab_right_focus);
				t1.setBackgroundResource(R.drawable.tab_left_nofocus);
				break;
			}
//			currIndex = arg0;
//			animation.setFillAfter(true);// True:图片停在动画结束位置
//			animation.setDuration(300);
//			cursor.startAnimation(animation);
		}

		@Override
		public void onPageScrolled(int arg0, float arg1, int arg2) {
		}

		@Override
		public void onPageScrollStateChanged(int arg0) {
		}
	}
}

